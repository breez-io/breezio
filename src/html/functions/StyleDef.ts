// generated by build-style-def.ts
import {FunctionDesc, Functions} from '../../../src/core';
const desc: FunctionDesc = {
  name: 'style-def',
  src: 'def',
  icon: '',
  properties: [
    {
      name: 'alignContent',
      type: 'any',
      options: [
        'space-around',
        'space-between',
        'space-evenly',
        'stretch',
        'center',
        'end',
        'flex-end',
        'flex-start',
        'start',
        'baseline',
        'normal'
      ],
      types: ['select', 'string']
    },
    {
      name: 'alignItems',
      type: 'any',
      options: [
        'center',
        'end',
        'flex-end',
        'flex-start',
        'self-end',
        'self-start',
        'start',
        'baseline',
        'normal',
        'stretch'
      ],
      types: ['select', 'string']
    },
    {
      name: 'alignSelf',
      type: 'any',
      options: [
        'center',
        'end',
        'flex-end',
        'flex-start',
        'self-end',
        'self-start',
        'start',
        'auto',
        'baseline',
        'normal',
        'stretch'
      ],
      types: ['select', 'string']
    },
    {
      name: 'animationDelay',
      type: 'string'
    },
    {
      name: 'animationDirection',
      type: 'any',
      options: ['alternate', 'alternate-reverse', 'normal', 'reverse'],
      types: ['string', 'select']
    },
    {
      name: 'animationDuration',
      type: 'string'
    },
    {
      name: 'animationFillMode',
      type: 'any',
      options: ['backwards', 'both', 'forwards', 'none'],
      types: ['string', 'select']
    },
    {
      name: 'animationIterationCount',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'animationName',
      type: 'string'
    },
    {
      name: 'animationPlayState',
      type: 'any',
      options: ['paused', 'running'],
      types: ['string', 'select']
    },
    {
      name: 'animationTimingFunction',
      type: 'any',
      options: ['ease', 'ease-in', 'ease-in-out', 'ease-out', 'step-end', 'step-start', 'linear'],
      types: ['select', 'string']
    },
    {
      name: 'appearance',
      type: 'any',
      options: [
        'button-bevel',
        'checkbox',
        'listbox',
        'menulist',
        'menulist-button',
        'meter',
        'progress-bar',
        'push-button',
        'radio',
        'searchfield',
        'slider-horizontal',
        'square-button',
        'textarea',
        'button',
        'none',
        'textfield'
      ],
      types: ['select', 'string']
    },
    {
      name: 'aspectRatio',
      type: 'string'
    },
    {
      name: 'backdropFilter',
      type: 'string'
    },
    {
      name: 'backfaceVisibility',
      type: 'any',
      options: ['hidden', 'visible'],
      types: ['select', 'string']
    },
    {
      name: 'backgroundAttachment',
      type: 'any',
      options: ['fixed', 'local', 'scroll'],
      types: ['string', 'select']
    },
    {
      name: 'backgroundBlendMode',
      type: 'any',
      options: [
        'color',
        'color-burn',
        'color-dodge',
        'darken',
        'difference',
        'exclusion',
        'hard-light',
        'hue',
        'lighten',
        'luminosity',
        'multiply',
        'normal',
        'overlay',
        'saturation',
        'screen',
        'soft-light'
      ],
      types: ['select', 'string']
    },
    {
      name: 'backgroundClip',
      type: 'any',
      options: ['border-box', 'content-box', 'padding-box'],
      types: ['string', 'select']
    },
    {
      name: 'backgroundColor',
      type: 'any',
      types: ['color', 'string']
    },
    {
      name: 'backgroundImage',
      type: 'string'
    },
    {
      name: 'backgroundOrigin',
      type: 'any',
      options: ['border-box', 'content-box', 'padding-box'],
      types: ['string', 'select']
    },
    {
      name: 'backgroundPosition',
      type: 'any',
      options: ['bottom', 'center', 'left', 'right', 'top'],
      types: ['string', 'select', 'number']
    },
    {
      name: 'backgroundPositionX',
      type: 'any',
      options: ['center', 'left', 'right', 'x-end', 'x-start'],
      types: ['string', 'select', 'number']
    },
    {
      name: 'backgroundPositionY',
      type: 'any',
      options: ['bottom', 'center', 'top', 'y-end', 'y-start'],
      types: ['string', 'select', 'number']
    },
    {
      name: 'backgroundRepeat',
      type: 'any',
      options: ['no-repeat', 'repeat', 'repeat-x', 'repeat-y', 'round', 'space'],
      types: ['select', 'string']
    },
    {
      name: 'backgroundSize',
      type: 'any',
      options: ['auto', 'contain', 'cover'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'blockSize',
      type: 'any',
      options: ['auto', 'available', 'fit-content', 'max-content', 'min-content'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'borderBlockColor',
      type: 'any',
      types: ['color', 'string']
    },
    {
      name: 'borderBlockEndColor',
      type: 'any',
      types: ['color', 'string']
    },
    {
      name: 'borderBlockEndStyle',
      type: 'any',
      options: ['dashed', 'dotted', 'double', 'groove', 'hidden', 'inset', 'none', 'outset', 'ridge', 'solid'],
      types: ['select', 'string']
    },
    {
      name: 'borderBlockEndWidth',
      type: 'any',
      options: ['medium', 'thick', 'thin'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'borderBlockStartColor',
      type: 'any',
      types: ['color', 'string']
    },
    {
      name: 'borderBlockStartStyle',
      type: 'any',
      options: ['dashed', 'dotted', 'double', 'groove', 'hidden', 'inset', 'none', 'outset', 'ridge', 'solid'],
      types: ['select', 'string']
    },
    {
      name: 'borderBlockStartWidth',
      type: 'any',
      options: ['medium', 'thick', 'thin'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'borderBlockStyle',
      type: 'any',
      options: ['dashed', 'dotted', 'double', 'groove', 'hidden', 'inset', 'none', 'outset', 'ridge', 'solid'],
      types: ['select', 'string']
    },
    {
      name: 'borderBlockWidth',
      type: 'any',
      options: ['medium', 'thick', 'thin'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'borderBottomColor',
      type: 'any',
      types: ['color', 'string']
    },
    {
      name: 'borderBottomLeftRadius',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'borderBottomRightRadius',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'borderBottomStyle',
      type: 'any',
      options: ['dashed', 'dotted', 'double', 'groove', 'hidden', 'inset', 'none', 'outset', 'ridge', 'solid'],
      types: ['select', 'string']
    },
    {
      name: 'borderBottomWidth',
      type: 'any',
      options: ['medium', 'thick', 'thin'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'borderCollapse',
      type: 'any',
      options: ['collapse', 'separate'],
      types: ['select', 'string']
    },
    {
      name: 'borderEndEndRadius',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'borderEndStartRadius',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'borderImageOutset',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'borderImageRepeat',
      type: 'any',
      options: ['repeat', 'round', 'space', 'stretch'],
      types: ['string', 'select']
    },
    {
      name: 'borderImageSlice',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'borderImageSource',
      type: 'string'
    },
    {
      name: 'borderImageWidth',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'borderInlineColor',
      type: 'any',
      types: ['color', 'string']
    },
    {
      name: 'borderInlineEndColor',
      type: 'any',
      types: ['color', 'string']
    },
    {
      name: 'borderInlineEndStyle',
      type: 'any',
      options: ['dashed', 'dotted', 'double', 'groove', 'hidden', 'inset', 'none', 'outset', 'ridge', 'solid'],
      types: ['select', 'string']
    },
    {
      name: 'borderInlineEndWidth',
      type: 'any',
      options: ['medium', 'thick', 'thin'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'borderInlineStartColor',
      type: 'any',
      types: ['color', 'string']
    },
    {
      name: 'borderInlineStartStyle',
      type: 'any',
      options: ['dashed', 'dotted', 'double', 'groove', 'hidden', 'inset', 'none', 'outset', 'ridge', 'solid'],
      types: ['select', 'string']
    },
    {
      name: 'borderInlineStartWidth',
      type: 'any',
      options: ['medium', 'thick', 'thin'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'borderInlineStyle',
      type: 'any',
      options: ['dashed', 'dotted', 'double', 'groove', 'hidden', 'inset', 'none', 'outset', 'ridge', 'solid'],
      types: ['select', 'string']
    },
    {
      name: 'borderInlineWidth',
      type: 'any',
      options: ['medium', 'thick', 'thin'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'borderLeftColor',
      type: 'any',
      types: ['color', 'string']
    },
    {
      name: 'borderLeftStyle',
      type: 'any',
      options: ['dashed', 'dotted', 'double', 'groove', 'hidden', 'inset', 'none', 'outset', 'ridge', 'solid'],
      types: ['select', 'string']
    },
    {
      name: 'borderLeftWidth',
      type: 'any',
      options: ['medium', 'thick', 'thin'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'borderRightColor',
      type: 'any',
      types: ['color', 'string']
    },
    {
      name: 'borderRightStyle',
      type: 'any',
      options: ['dashed', 'dotted', 'double', 'groove', 'hidden', 'inset', 'none', 'outset', 'ridge', 'solid'],
      types: ['select', 'string']
    },
    {
      name: 'borderRightWidth',
      type: 'any',
      options: ['medium', 'thick', 'thin'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'borderSpacing',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'borderStartEndRadius',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'borderStartStartRadius',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'borderTopColor',
      type: 'any',
      types: ['color', 'string']
    },
    {
      name: 'borderTopLeftRadius',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'borderTopRightRadius',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'borderTopStyle',
      type: 'any',
      options: ['dashed', 'dotted', 'double', 'groove', 'hidden', 'inset', 'none', 'outset', 'ridge', 'solid'],
      types: ['select', 'string']
    },
    {
      name: 'borderTopWidth',
      type: 'any',
      options: ['medium', 'thick', 'thin'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'bottom',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'boxDecorationBreak',
      type: 'any',
      options: ['clone', 'slice'],
      types: ['select', 'string']
    },
    {
      name: 'boxShadow',
      type: 'string'
    },
    {
      name: 'boxSizing',
      type: 'any',
      options: ['border-box', 'content-box'],
      types: ['select', 'string']
    },
    {
      name: 'breakAfter',
      type: 'any',
      options: [
        'all',
        'always',
        'auto',
        'avoid',
        'avoid-column',
        'avoid-page',
        'avoid-region',
        'column',
        'left',
        'page',
        'recto',
        'region',
        'right',
        'verso'
      ],
      types: ['select', 'string']
    },
    {
      name: 'breakBefore',
      type: 'any',
      options: [
        'all',
        'always',
        'auto',
        'avoid',
        'avoid-column',
        'avoid-page',
        'avoid-region',
        'column',
        'left',
        'page',
        'recto',
        'region',
        'right',
        'verso'
      ],
      types: ['select', 'string']
    },
    {
      name: 'breakInside',
      type: 'any',
      options: ['auto', 'avoid', 'avoid-column', 'avoid-page', 'avoid-region'],
      types: ['select', 'string']
    },
    {
      name: 'captionSide',
      type: 'any',
      options: ['block-end', 'block-start', 'bottom', 'inline-end', 'inline-start', 'top'],
      types: ['select', 'string']
    },
    {
      name: 'caretColor',
      type: 'any',
      types: ['color', 'string']
    },
    {
      name: 'clear',
      type: 'any',
      options: ['both', 'inline-end', 'inline-start', 'left', 'none', 'right'],
      types: ['select', 'string']
    },
    {
      name: 'clipPath',
      type: 'any',
      options: ['border-box', 'content-box', 'padding-box', 'fill-box', 'margin-box', 'stroke-box', 'view-box', 'none'],
      types: ['select', 'string']
    },
    {
      name: 'color',
      type: 'any',
      types: ['color', 'string']
    },
    {
      name: 'colorAdjust',
      type: 'any',
      options: ['economy', 'exact'],
      types: ['select', 'string']
    },
    {
      name: 'columnCount',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'columnFill',
      type: 'any',
      options: ['auto', 'balance', 'balance-all'],
      types: ['select', 'string']
    },
    {
      name: 'columnGap',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'columnRuleColor',
      type: 'any',
      types: ['color', 'string']
    },
    {
      name: 'columnRuleStyle',
      type: 'any',
      options: ['dashed', 'dotted', 'double', 'groove', 'hidden', 'inset', 'none', 'outset', 'ridge', 'solid'],
      types: ['select', 'string']
    },
    {
      name: 'columnRuleWidth',
      type: 'any',
      options: ['medium', 'thick', 'thin'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'columnSpan',
      type: 'any',
      options: ['all', 'none'],
      types: ['select', 'string']
    },
    {
      name: 'columnWidth',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'contain',
      type: 'any',
      options: ['content', 'layout', 'none', 'paint', 'size', 'strict', 'style'],
      types: ['select', 'string']
    },
    {
      name: 'content',
      type: 'any',
      options: ['close-quote', 'no-close-quote', 'no-open-quote', 'open-quote', 'contents', 'none', 'normal'],
      types: ['select', 'string']
    },
    {
      name: 'counterIncrement',
      type: 'string'
    },
    {
      name: 'counterReset',
      type: 'string'
    },
    {
      name: 'counterSet',
      type: 'string'
    },
    {
      name: 'cursor',
      type: 'any',
      options: [
        'alias',
        'all-scroll',
        'auto',
        'cell',
        'col-resize',
        'context-menu',
        'copy',
        'crosshair',
        'default',
        'e-resize',
        'ew-resize',
        'grab',
        'grabbing',
        'help',
        'move',
        'n-resize',
        'ne-resize',
        'nesw-resize',
        'no-drop',
        'none',
        'not-allowed',
        'ns-resize',
        'nw-resize',
        'nwse-resize',
        'pointer',
        'progress',
        'row-resize',
        's-resize',
        'se-resize',
        'sw-resize',
        'text',
        'vertical-text',
        'w-resize',
        'wait',
        'zoom-in',
        'zoom-out'
      ],
      types: ['select', 'string']
    },
    {
      name: 'direction',
      type: 'any',
      options: ['ltr', 'rtl'],
      types: ['select', 'string']
    },
    {
      name: 'display',
      type: 'any',
      options: [
        'block',
        'inline',
        'run-in',
        'flex',
        'flow',
        'flow-root',
        'grid',
        'ruby',
        'table',
        'ruby-base',
        'ruby-base-container',
        'ruby-text',
        'ruby-text-container',
        'table-caption',
        'table-cell',
        'table-column',
        'table-column-group',
        'table-footer-group',
        'table-header-group',
        'table-row',
        'table-row-group',
        'inline-block',
        'inline-flex',
        'inline-grid',
        'inline-list-item',
        'inline-table',
        'contents',
        'list-item',
        'none'
      ],
      types: ['select', 'string']
    },
    {
      name: 'emptyCells',
      type: 'any',
      options: ['hide', 'show'],
      types: ['select', 'string']
    },
    {
      name: 'filter',
      type: 'string'
    },
    {
      name: 'flexBasis',
      type: 'any',
      options: ['auto', 'available', 'content', 'fit-content', 'max-content', 'min-content'],
      types: ['select', 'number', 'string']
    },
    {
      name: 'flexDirection',
      type: 'any',
      options: ['column', 'column-reverse', 'row', 'row-reverse'],
      types: ['select', 'string']
    },
    {
      name: 'flexGrow',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'flexShrink',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'flexWrap',
      type: 'any',
      options: ['nowrap', 'wrap', 'wrap-reverse'],
      types: ['select', 'string']
    },
    {
      name: 'float',
      type: 'any',
      options: ['inline-end', 'inline-start', 'left', 'none', 'right'],
      types: ['select', 'string']
    },
    {
      name: 'fontFamily',
      type: 'any',
      options: ['cursive', 'fantasy', 'monospace', 'sans-serif', 'serif'],
      types: ['string', 'select']
    },
    {
      name: 'fontFeatureSettings',
      type: 'string'
    },
    {
      name: 'fontKerning',
      type: 'any',
      options: ['auto', 'none', 'normal'],
      types: ['select', 'string']
    },
    {
      name: 'fontLanguageOverride',
      type: 'string'
    },
    {
      name: 'fontOpticalSizing',
      type: 'any',
      options: ['auto', 'none'],
      types: ['select', 'string']
    },
    {
      name: 'fontSize',
      type: 'any',
      options: [
        'large',
        'medium',
        'small',
        'x-large',
        'x-small',
        'xx-large',
        'xx-small',
        'xxx-large',
        'larger',
        'smaller'
      ],
      types: ['number', 'select', 'string']
    },
    {
      name: 'fontSizeAdjust',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'fontStretch',
      type: 'any',
      options: [
        'condensed',
        'expanded',
        'extra-condensed',
        'extra-expanded',
        'normal',
        'semi-condensed',
        'semi-expanded',
        'ultra-condensed',
        'ultra-expanded'
      ],
      types: ['select', 'string']
    },
    {
      name: 'fontStyle',
      type: 'any',
      options: ['italic', 'normal', 'oblique'],
      types: ['string', 'select']
    },
    {
      name: 'fontSynthesis',
      type: 'any',
      options: ['none', 'style', 'weight'],
      types: ['string', 'select']
    },
    {
      name: 'fontVariant',
      type: 'any',
      options: [
        'jis04',
        'jis78',
        'jis83',
        'jis90',
        'simplified',
        'traditional',
        'all-petite-caps',
        'all-small-caps',
        'common-ligatures',
        'contextual',
        'diagonal-fractions',
        'discretionary-ligatures',
        'full-width',
        'historical-forms',
        'historical-ligatures',
        'lining-nums',
        'no-common-ligatures',
        'no-contextual',
        'no-discretionary-ligatures',
        'no-historical-ligatures',
        'none',
        'normal',
        'oldstyle-nums',
        'ordinal',
        'petite-caps',
        'proportional-nums',
        'proportional-width',
        'ruby',
        'slashed-zero',
        'small-caps',
        'stacked-fractions',
        'tabular-nums',
        'titling-caps',
        'unicase'
      ],
      types: ['select', 'string']
    },
    {
      name: 'fontVariantCaps',
      type: 'any',
      options: ['all-petite-caps', 'all-small-caps', 'normal', 'petite-caps', 'small-caps', 'titling-caps', 'unicase'],
      types: ['select', 'string']
    },
    {
      name: 'fontVariantEastAsian',
      type: 'any',
      options: [
        'jis04',
        'jis78',
        'jis83',
        'jis90',
        'simplified',
        'traditional',
        'full-width',
        'normal',
        'proportional-width',
        'ruby'
      ],
      types: ['select', 'string']
    },
    {
      name: 'fontVariantLigatures',
      type: 'any',
      options: [
        'common-ligatures',
        'contextual',
        'discretionary-ligatures',
        'historical-ligatures',
        'no-common-ligatures',
        'no-contextual',
        'no-discretionary-ligatures',
        'no-historical-ligatures',
        'none',
        'normal'
      ],
      types: ['select', 'string']
    },
    {
      name: 'fontVariantNumeric',
      type: 'any',
      options: [
        'diagonal-fractions',
        'lining-nums',
        'normal',
        'oldstyle-nums',
        'ordinal',
        'proportional-nums',
        'slashed-zero',
        'stacked-fractions',
        'tabular-nums'
      ],
      types: ['select', 'string']
    },
    {
      name: 'fontVariantPosition',
      type: 'any',
      options: ['normal', 'sub', 'super'],
      types: ['select', 'string']
    },
    {
      name: 'fontVariationSettings',
      type: 'string'
    },
    {
      name: 'fontWeight',
      type: 'any',
      options: ['bold', 'normal', 'bolder', 'lighter'],
      types: ['select', 'number', 'string']
    },
    {
      name: 'gridAutoColumns',
      type: 'any',
      options: ['auto', 'max-content', 'min-content'],
      types: ['string', 'number', 'select']
    },
    {
      name: 'gridAutoFlow',
      type: 'any',
      options: ['column', 'dense', 'row'],
      types: ['string', 'select']
    },
    {
      name: 'gridAutoRows',
      type: 'any',
      options: ['auto', 'max-content', 'min-content'],
      types: ['string', 'number', 'select']
    },
    {
      name: 'gridColumnEnd',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'gridColumnStart',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'gridRowEnd',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'gridRowStart',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'gridTemplateAreas',
      type: 'string'
    },
    {
      name: 'gridTemplateColumns',
      type: 'any',
      options: ['auto', 'max-content', 'min-content', 'none', 'subgrid'],
      types: ['string', 'select', 'number']
    },
    {
      name: 'gridTemplateRows',
      type: 'any',
      options: ['auto', 'max-content', 'min-content', 'none', 'subgrid'],
      types: ['string', 'select', 'number']
    },
    {
      name: 'hangingPunctuation',
      type: 'any',
      options: ['allow-end', 'first', 'force-end', 'last', 'none'],
      types: ['string', 'select']
    },
    {
      name: 'height',
      type: 'any',
      options: ['auto', 'available', 'fit-content', 'max-content', 'min-content'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'hyphens',
      type: 'any',
      options: ['auto', 'manual', 'none'],
      types: ['select', 'string']
    },
    {
      name: 'imageOrientation',
      type: 'any',
      options: ['flip', 'from-image'],
      types: ['string', 'select']
    },
    {
      name: 'imageRendering',
      type: 'any',
      options: ['auto', 'crisp-edges', 'pixelated'],
      types: ['select', 'string']
    },
    {
      name: 'initialLetter',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'inlineSize',
      type: 'any',
      options: ['auto', 'available', 'fit-content', 'max-content', 'min-content'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'inset',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'insetBlock',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'insetBlockEnd',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'insetBlockStart',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'insetInline',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'insetInlineEnd',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'insetInlineStart',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'isolation',
      type: 'any',
      options: ['auto', 'isolate'],
      types: ['select', 'string']
    },
    {
      name: 'justifyContent',
      type: 'any',
      options: [
        'space-around',
        'space-between',
        'space-evenly',
        'stretch',
        'center',
        'end',
        'flex-end',
        'flex-start',
        'start',
        'left',
        'normal',
        'right'
      ],
      types: ['select', 'string']
    },
    {
      name: 'justifyItems',
      type: 'any',
      options: [
        'center',
        'end',
        'flex-end',
        'flex-start',
        'self-end',
        'self-start',
        'start',
        'baseline',
        'left',
        'legacy',
        'normal',
        'right',
        'stretch'
      ],
      types: ['select', 'string']
    },
    {
      name: 'justifySelf',
      type: 'any',
      options: [
        'center',
        'end',
        'flex-end',
        'flex-start',
        'self-end',
        'self-start',
        'start',
        'auto',
        'baseline',
        'left',
        'normal',
        'right',
        'stretch'
      ],
      types: ['select', 'string']
    },
    {
      name: 'left',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'letterSpacing',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'lineBreak',
      type: 'any',
      options: ['anywhere', 'auto', 'loose', 'normal', 'strict'],
      types: ['select', 'string']
    },
    {
      name: 'lineHeight',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'lineHeightStep',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'listStyleImage',
      type: 'string'
    },
    {
      name: 'listStylePosition',
      type: 'any',
      options: ['inside', 'outside'],
      types: ['select', 'string']
    },
    {
      name: 'listStyleType',
      type: 'string'
    },
    {
      name: 'marginBlock',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'marginBlockEnd',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'marginBlockStart',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'marginBottom',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'marginInline',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'marginInlineEnd',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'marginInlineStart',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'marginLeft',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'marginRight',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'marginTop',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'maskBorderMode',
      type: 'any',
      options: ['alpha', 'luminance'],
      types: ['select', 'string']
    },
    {
      name: 'maskBorderOutset',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'maskBorderRepeat',
      type: 'any',
      options: ['repeat', 'round', 'space', 'stretch'],
      types: ['string', 'select']
    },
    {
      name: 'maskBorderSlice',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'maskBorderSource',
      type: 'string'
    },
    {
      name: 'maskBorderWidth',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'maskClip',
      type: 'any',
      options: [
        'border-box',
        'content-box',
        'padding-box',
        'fill-box',
        'margin-box',
        'stroke-box',
        'view-box',
        'no-clip'
      ],
      types: ['select', 'string']
    },
    {
      name: 'maskComposite',
      type: 'any',
      options: ['add', 'exclude', 'intersect', 'subtract'],
      types: ['string', 'select']
    },
    {
      name: 'maskImage',
      type: 'string'
    },
    {
      name: 'maskMode',
      type: 'any',
      options: ['alpha', 'luminance', 'match-source'],
      types: ['string', 'select']
    },
    {
      name: 'maskOrigin',
      type: 'any',
      options: ['border-box', 'content-box', 'padding-box', 'margin-box'],
      types: ['string', 'select']
    },
    {
      name: 'maskPosition',
      type: 'any',
      options: ['bottom', 'center', 'left', 'right', 'top'],
      types: ['string', 'select', 'number']
    },
    {
      name: 'maskRepeat',
      type: 'any',
      options: ['no-repeat', 'repeat', 'repeat-x', 'repeat-y', 'round', 'space'],
      types: ['select', 'string']
    },
    {
      name: 'maskSize',
      type: 'any',
      options: ['auto', 'contain', 'cover'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'maskType',
      type: 'any',
      options: ['alpha', 'luminance'],
      types: ['select', 'string']
    },
    {
      name: 'maxBlockSize',
      type: 'any',
      options: ['fill-available', 'fit-content', 'max-content', 'min-content', 'none'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'maxHeight',
      type: 'any',
      options: ['fill-available', 'fit-content', 'intrinsic', 'max-content', 'min-content', 'none'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'maxInlineSize',
      type: 'any',
      options: ['fill-available', 'fit-content', 'max-content', 'min-content', 'none'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'maxWidth',
      type: 'any',
      options: ['fill-available', 'fit-content', 'intrinsic', 'max-content', 'min-content', 'none'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'minBlockSize',
      type: 'any',
      options: ['auto', 'fill-available', 'fit-content', 'max-content', 'min-content'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'minHeight',
      type: 'any',
      options: ['auto', 'fill-available', 'fit-content', 'intrinsic', 'max-content', 'min-content'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'minInlineSize',
      type: 'any',
      options: ['auto', 'fill-available', 'fit-content', 'max-content', 'min-content'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'minWidth',
      type: 'any',
      options: ['auto', 'fill-available', 'fit-content', 'intrinsic', 'max-content', 'min-content', 'min-intrinsic'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'mixBlendMode',
      type: 'any',
      options: [
        'color',
        'color-burn',
        'color-dodge',
        'darken',
        'difference',
        'exclusion',
        'hard-light',
        'hue',
        'lighten',
        'luminosity',
        'multiply',
        'normal',
        'overlay',
        'saturation',
        'screen',
        'soft-light'
      ],
      types: ['select', 'string']
    },
    {
      name: 'motionDistance',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'motionPath',
      type: 'any',
      options: ['border-box', 'content-box', 'padding-box', 'fill-box', 'margin-box', 'stroke-box', 'view-box', 'none'],
      types: ['select', 'string']
    },
    {
      name: 'motionRotation',
      type: 'any',
      options: ['auto', 'reverse'],
      types: ['string', 'select']
    },
    {
      name: 'objectFit',
      type: 'any',
      options: ['contain', 'cover', 'fill', 'none', 'scale-down'],
      types: ['select', 'string']
    },
    {
      name: 'objectPosition',
      type: 'any',
      options: ['bottom', 'center', 'left', 'right', 'top'],
      types: ['string', 'select', 'number']
    },
    {
      name: 'offsetAnchor',
      type: 'any',
      options: ['bottom', 'center', 'left', 'right', 'top', 'auto'],
      types: ['select', 'number', 'string']
    },
    {
      name: 'offsetDistance',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'offsetPath',
      type: 'any',
      options: ['border-box', 'content-box', 'padding-box', 'fill-box', 'margin-box', 'stroke-box', 'view-box', 'none'],
      types: ['select', 'string']
    },
    {
      name: 'offsetRotate',
      type: 'any',
      options: ['auto', 'reverse'],
      types: ['string', 'select']
    },
    {
      name: 'offsetRotation',
      type: 'any',
      options: ['auto', 'reverse'],
      types: ['string', 'select']
    },
    {
      name: 'opacity',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'order',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'orphans',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'outlineColor',
      type: 'any',
      types: ['color', 'string']
    },
    {
      name: 'outlineOffset',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'outlineStyle',
      type: 'any',
      options: ['dashed', 'dotted', 'double', 'groove', 'hidden', 'inset', 'none', 'outset', 'ridge', 'solid', 'auto'],
      types: ['select', 'string']
    },
    {
      name: 'outlineWidth',
      type: 'any',
      options: ['medium', 'thick', 'thin'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'overflow',
      type: 'any',
      options: ['auto', 'clip', 'hidden', 'scroll', 'visible'],
      types: ['string', 'select']
    },
    {
      name: 'overflowAnchor',
      type: 'any',
      options: ['auto', 'none'],
      types: ['select', 'string']
    },
    {
      name: 'overflowBlock',
      type: 'any',
      options: ['auto', 'clip', 'hidden', 'scroll', 'visible'],
      types: ['select', 'string']
    },
    {
      name: 'overflowClipBox',
      type: 'any',
      options: ['content-box', 'padding-box'],
      types: ['select', 'string']
    },
    {
      name: 'overflowInline',
      type: 'any',
      options: ['auto', 'clip', 'hidden', 'scroll', 'visible'],
      types: ['select', 'string']
    },
    {
      name: 'overflowWrap',
      type: 'any',
      options: ['anywhere', 'break-word', 'normal'],
      types: ['select', 'string']
    },
    {
      name: 'overflowX',
      type: 'any',
      options: ['auto', 'clip', 'hidden', 'scroll', 'visible'],
      types: ['select', 'string']
    },
    {
      name: 'overflowY',
      type: 'any',
      options: ['auto', 'clip', 'hidden', 'scroll', 'visible'],
      types: ['select', 'string']
    },
    {
      name: 'overscrollBehavior',
      type: 'any',
      options: ['auto', 'contain', 'none'],
      types: ['string', 'select']
    },
    {
      name: 'overscrollBehaviorX',
      type: 'any',
      options: ['auto', 'contain', 'none'],
      types: ['select', 'string']
    },
    {
      name: 'overscrollBehaviorY',
      type: 'any',
      options: ['auto', 'contain', 'none'],
      types: ['select', 'string']
    },
    {
      name: 'paddingBlock',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'paddingBlockEnd',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'paddingBlockStart',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'paddingBottom',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'paddingInline',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'paddingInlineEnd',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'paddingInlineStart',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'paddingLeft',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'paddingRight',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'paddingTop',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'pageBreakAfter',
      type: 'any',
      options: ['always', 'auto', 'avoid', 'left', 'recto', 'right', 'verso'],
      types: ['select', 'string']
    },
    {
      name: 'pageBreakBefore',
      type: 'any',
      options: ['always', 'auto', 'avoid', 'left', 'recto', 'right', 'verso'],
      types: ['select', 'string']
    },
    {
      name: 'pageBreakInside',
      type: 'any',
      options: ['auto', 'avoid'],
      types: ['select', 'string']
    },
    {
      name: 'paintOrder',
      type: 'any',
      options: ['fill', 'markers', 'normal', 'stroke'],
      types: ['string', 'select']
    },
    {
      name: 'perspective',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'perspectiveOrigin',
      type: 'any',
      options: ['bottom', 'center', 'left', 'right', 'top'],
      types: ['string', 'select', 'number']
    },
    {
      name: 'placeContent',
      type: 'any',
      options: [
        'space-around',
        'space-between',
        'space-evenly',
        'stretch',
        'center',
        'end',
        'flex-end',
        'flex-start',
        'start',
        'baseline',
        'normal'
      ],
      types: ['select', 'string']
    },
    {
      name: 'pointerEvents',
      type: 'any',
      options: [
        'all',
        'auto',
        'fill',
        'inherit',
        'none',
        'painted',
        'stroke',
        'visible',
        'visibleFill',
        'visiblePainted',
        'visibleStroke'
      ],
      types: ['select', 'string']
    },
    {
      name: 'position',
      type: 'any',
      options: ['absolute', 'fixed', 'relative', 'static', 'sticky'],
      types: ['select', 'string']
    },
    {
      name: 'quotes',
      type: 'any',
      options: ['auto', 'none'],
      types: ['string', 'select']
    },
    {
      name: 'resize',
      type: 'any',
      options: ['block', 'both', 'horizontal', 'inline', 'none', 'vertical'],
      types: ['select', 'string']
    },
    {
      name: 'right',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'rotate',
      type: 'string'
    },
    {
      name: 'rowGap',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'rubyAlign',
      type: 'any',
      options: ['center', 'space-around', 'space-between', 'start'],
      types: ['select', 'string']
    },
    {
      name: 'rubyPosition',
      type: 'any',
      options: ['over', 'under'],
      types: ['select', 'string']
    },
    {
      name: 'scale',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'scrollBehavior',
      type: 'any',
      options: ['auto', 'smooth'],
      types: ['select', 'string']
    },
    {
      name: 'scrollMargin',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'scrollMarginBlock',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'scrollMarginBlockEnd',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'scrollMarginBlockStart',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'scrollMarginBottom',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'scrollMarginInline',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'scrollMarginInlineEnd',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'scrollMarginInlineStart',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'scrollMarginLeft',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'scrollMarginRight',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'scrollMarginTop',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'scrollPadding',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'scrollPaddingBlock',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'scrollPaddingBlockEnd',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'scrollPaddingBlockStart',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'scrollPaddingBottom',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'scrollPaddingInline',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'scrollPaddingInlineEnd',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'scrollPaddingInlineStart',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'scrollPaddingLeft',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'scrollPaddingRight',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'scrollPaddingTop',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'scrollSnapAlign',
      type: 'any',
      options: ['center', 'end', 'none', 'start'],
      types: ['string', 'select']
    },
    {
      name: 'scrollSnapStop',
      type: 'any',
      options: ['always', 'normal'],
      types: ['select', 'string']
    },
    {
      name: 'scrollSnapType',
      type: 'any',
      options: ['block', 'both', 'inline', 'none', 'x', 'y'],
      types: ['select', 'string']
    },
    {
      name: 'scrollbarColor',
      type: 'any',
      options: ['auto', 'dark', 'light'],
      types: ['color', 'select', 'string']
    },
    {
      name: 'scrollbarWidth',
      type: 'any',
      options: ['auto', 'none', 'thin'],
      types: ['select', 'string']
    },
    {
      name: 'shapeImageThreshold',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'shapeMargin',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'shapeOutside',
      type: 'any',
      options: ['border-box', 'content-box', 'padding-box', 'margin-box', 'none'],
      types: ['string', 'select']
    },
    {
      name: 'tabSize',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'tableLayout',
      type: 'any',
      options: ['auto', 'fixed'],
      types: ['select', 'string']
    },
    {
      name: 'textAlign',
      type: 'any',
      options: ['center', 'end', 'justify', 'left', 'match-parent', 'right', 'start'],
      types: ['select', 'string']
    },
    {
      name: 'textAlignLast',
      type: 'any',
      options: ['auto', 'center', 'end', 'justify', 'left', 'right', 'start'],
      types: ['select', 'string']
    },
    {
      name: 'textCombineUpright',
      type: 'any',
      options: ['all', 'digits', 'none'],
      types: ['string', 'select']
    },
    {
      name: 'textDecorationColor',
      type: 'any',
      types: ['color', 'string']
    },
    {
      name: 'textDecorationLine',
      type: 'any',
      options: ['blink', 'grammar-error', 'line-through', 'none', 'overline', 'spelling-error', 'underline'],
      types: ['select', 'string']
    },
    {
      name: 'textDecorationSkip',
      type: 'any',
      options: ['box-decoration', 'edges', 'leading-spaces', 'none', 'objects', 'spaces', 'trailing-spaces'],
      types: ['select', 'string']
    },
    {
      name: 'textDecorationSkipInk',
      type: 'any',
      options: ['auto', 'none'],
      types: ['select', 'string']
    },
    {
      name: 'textDecorationStyle',
      type: 'any',
      options: ['dashed', 'dotted', 'double', 'solid', 'wavy'],
      types: ['select', 'string']
    },
    {
      name: 'textDecorationThickness',
      type: 'any',
      options: ['auto', 'from-font'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'textDecorationWidth',
      type: 'any',
      options: ['auto', 'from-font'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'textEmphasisColor',
      type: 'any',
      types: ['color', 'string']
    },
    {
      name: 'textEmphasisPosition',
      type: 'string'
    },
    {
      name: 'textEmphasisStyle',
      type: 'any',
      options: ['circle', 'dot', 'double-circle', 'filled', 'none', 'open', 'sesame', 'triangle'],
      types: ['select', 'string']
    },
    {
      name: 'textIndent',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'textJustify',
      type: 'any',
      options: ['auto', 'inter-character', 'inter-word', 'none'],
      types: ['select', 'string']
    },
    {
      name: 'textOrientation',
      type: 'any',
      options: ['mixed', 'sideways', 'upright'],
      types: ['select', 'string']
    },
    {
      name: 'textOverflow',
      type: 'any',
      options: ['clip', 'ellipsis'],
      types: ['string', 'select']
    },
    {
      name: 'textRendering',
      type: 'any',
      options: ['auto', 'geometricPrecision', 'optimizeLegibility', 'optimizeSpeed'],
      types: ['select', 'string']
    },
    {
      name: 'textShadow',
      type: 'string'
    },
    {
      name: 'textSizeAdjust',
      type: 'any',
      options: ['auto', 'none'],
      types: ['string', 'select']
    },
    {
      name: 'textTransform',
      type: 'any',
      options: ['capitalize', 'full-size-kana', 'full-width', 'lowercase', 'none', 'uppercase'],
      types: ['select', 'string']
    },
    {
      name: 'textUnderlineOffset',
      type: 'any',
      options: ['auto', 'from-font'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'textUnderlinePosition',
      type: 'any',
      options: ['auto', 'left', 'right', 'under'],
      types: ['string', 'select']
    },
    {
      name: 'top',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'touchAction',
      type: 'any',
      options: [
        'auto',
        'manipulation',
        'none',
        'pan-down',
        'pan-left',
        'pan-right',
        'pan-up',
        'pan-x',
        'pan-y',
        'pinch-zoom'
      ],
      types: ['select', 'string']
    },
    {
      name: 'transform',
      type: 'string'
    },
    {
      name: 'transformBox',
      type: 'any',
      options: ['border-box', 'fill-box', 'view-box'],
      types: ['select', 'string']
    },
    {
      name: 'transformOrigin',
      type: 'any',
      options: ['bottom', 'center', 'left', 'right', 'top'],
      types: ['string', 'select', 'number']
    },
    {
      name: 'transformStyle',
      type: 'any',
      options: ['flat', 'preserve-3d'],
      types: ['select', 'string']
    },
    {
      name: 'transitionDelay',
      type: 'string'
    },
    {
      name: 'transitionDuration',
      type: 'string'
    },
    {
      name: 'transitionProperty',
      type: 'any',
      options: ['all', 'none'],
      types: ['string', 'select']
    },
    {
      name: 'transitionTimingFunction',
      type: 'any',
      options: ['ease', 'ease-in', 'ease-in-out', 'ease-out', 'step-end', 'step-start', 'linear'],
      types: ['select', 'string']
    },
    {
      name: 'translate',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'unicodeBidi',
      type: 'any',
      options: ['bidi-override', 'embed', 'isolate', 'isolate-override', 'normal', 'plaintext'],
      types: ['select', 'string']
    },
    {
      name: 'userSelect',
      type: 'any',
      options: ['all', 'auto', 'contain', 'element', 'none', 'text'],
      types: ['select', 'string']
    },
    {
      name: 'verticalAlign',
      type: 'any',
      options: ['baseline', 'bottom', 'middle', 'sub', 'super', 'text-bottom', 'text-top', 'top'],
      types: ['select', 'number', 'string']
    },
    {
      name: 'visibility',
      type: 'any',
      options: ['collapse', 'hidden', 'visible'],
      types: ['select', 'string']
    },
    {
      name: 'whiteSpace',
      type: 'any',
      options: ['break-spaces', 'normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap'],
      types: ['select', 'string']
    },
    {
      name: 'widows',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'width',
      type: 'any',
      options: ['auto', 'available', 'fit-content', 'intrinsic', 'max-content', 'min-content', 'min-intrinsic'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'willChange',
      type: 'any',
      options: ['contents', 'scroll-position', 'auto'],
      types: ['string', 'select']
    },
    {
      name: 'wordBreak',
      type: 'any',
      options: ['break-all', 'break-word', 'keep-all', 'normal'],
      types: ['select', 'string']
    },
    {
      name: 'wordSpacing',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'wordWrap',
      type: 'any',
      options: ['break-word', 'normal'],
      types: ['select', 'string']
    },
    {
      name: 'writingMode',
      type: 'any',
      options: ['horizontal-tb', 'sideways-lr', 'sideways-rl', 'vertical-lr', 'vertical-rl'],
      types: ['select', 'string']
    },
    {
      name: 'zIndex',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'zoom',
      type: 'any',
      options: ['normal', 'reset'],
      types: ['string', 'number', 'select']
    },
    {
      name: 'all',
      type: 'string'
    },
    {
      name: 'animation',
      type: 'any',
      options: [
        'ease',
        'ease-in',
        'ease-in-out',
        'ease-out',
        'step-end',
        'step-start',
        'linear',
        'alternate',
        'alternate-reverse',
        'normal',
        'reverse',
        'backwards',
        'both',
        'forwards',
        'none',
        'infinite',
        'paused',
        'running'
      ],
      types: ['select', 'number', 'string']
    },
    {
      name: 'background',
      type: 'any',
      options: [
        'bottom',
        'center',
        'left',
        'right',
        'top',
        'no-repeat',
        'repeat',
        'repeat-x',
        'repeat-y',
        'round',
        'space',
        'fixed',
        'local',
        'scroll',
        'border-box',
        'content-box',
        'padding-box',
        'none'
      ],
      types: ['string', 'select', 'color', 'number']
    },
    {
      name: 'border',
      type: 'any',
      options: [
        'medium',
        'thick',
        'thin',
        'dashed',
        'dotted',
        'double',
        'groove',
        'hidden',
        'inset',
        'none',
        'outset',
        'ridge',
        'solid'
      ],
      types: ['string', 'select', 'color', 'number']
    },
    {
      name: 'borderBlock',
      type: 'any',
      options: [
        'medium',
        'thick',
        'thin',
        'dashed',
        'dotted',
        'double',
        'groove',
        'hidden',
        'inset',
        'none',
        'outset',
        'ridge',
        'solid'
      ],
      types: ['string', 'select', 'color', 'number']
    },
    {
      name: 'borderBlockEnd',
      type: 'any',
      options: [
        'medium',
        'thick',
        'thin',
        'dashed',
        'dotted',
        'double',
        'groove',
        'hidden',
        'inset',
        'none',
        'outset',
        'ridge',
        'solid'
      ],
      types: ['string', 'select', 'color', 'number']
    },
    {
      name: 'borderBlockStart',
      type: 'any',
      options: [
        'medium',
        'thick',
        'thin',
        'dashed',
        'dotted',
        'double',
        'groove',
        'hidden',
        'inset',
        'none',
        'outset',
        'ridge',
        'solid'
      ],
      types: ['string', 'select', 'color', 'number']
    },
    {
      name: 'borderBottom',
      type: 'any',
      options: [
        'medium',
        'thick',
        'thin',
        'dashed',
        'dotted',
        'double',
        'groove',
        'hidden',
        'inset',
        'none',
        'outset',
        'ridge',
        'solid'
      ],
      types: ['string', 'select', 'color', 'number']
    },
    {
      name: 'borderColor',
      type: 'any',
      types: ['color', 'string']
    },
    {
      name: 'borderImage',
      type: 'any',
      options: ['none', 'repeat', 'round', 'space', 'stretch'],
      types: ['string', 'select', 'number']
    },
    {
      name: 'borderInline',
      type: 'any',
      options: [
        'medium',
        'thick',
        'thin',
        'dashed',
        'dotted',
        'double',
        'groove',
        'hidden',
        'inset',
        'none',
        'outset',
        'ridge',
        'solid'
      ],
      types: ['string', 'select', 'color', 'number']
    },
    {
      name: 'borderInlineEnd',
      type: 'any',
      options: [
        'medium',
        'thick',
        'thin',
        'dashed',
        'dotted',
        'double',
        'groove',
        'hidden',
        'inset',
        'none',
        'outset',
        'ridge',
        'solid'
      ],
      types: ['string', 'select', 'color', 'number']
    },
    {
      name: 'borderInlineStart',
      type: 'any',
      options: [
        'medium',
        'thick',
        'thin',
        'dashed',
        'dotted',
        'double',
        'groove',
        'hidden',
        'inset',
        'none',
        'outset',
        'ridge',
        'solid'
      ],
      types: ['string', 'select', 'color', 'number']
    },
    {
      name: 'borderLeft',
      type: 'any',
      options: [
        'medium',
        'thick',
        'thin',
        'dashed',
        'dotted',
        'double',
        'groove',
        'hidden',
        'inset',
        'none',
        'outset',
        'ridge',
        'solid'
      ],
      types: ['string', 'select', 'color', 'number']
    },
    {
      name: 'borderRadius',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'borderRight',
      type: 'any',
      options: [
        'medium',
        'thick',
        'thin',
        'dashed',
        'dotted',
        'double',
        'groove',
        'hidden',
        'inset',
        'none',
        'outset',
        'ridge',
        'solid'
      ],
      types: ['string', 'select', 'color', 'number']
    },
    {
      name: 'borderStyle',
      type: 'any',
      options: ['dashed', 'dotted', 'double', 'groove', 'hidden', 'inset', 'none', 'outset', 'ridge', 'solid'],
      types: ['select', 'string']
    },
    {
      name: 'borderTop',
      type: 'any',
      options: [
        'medium',
        'thick',
        'thin',
        'dashed',
        'dotted',
        'double',
        'groove',
        'hidden',
        'inset',
        'none',
        'outset',
        'ridge',
        'solid'
      ],
      types: ['string', 'select', 'color', 'number']
    },
    {
      name: 'borderWidth',
      type: 'any',
      options: ['medium', 'thick', 'thin'],
      types: ['number', 'select', 'string']
    },
    {
      name: 'columnRule',
      type: 'any',
      options: [
        'medium',
        'thick',
        'thin',
        'dashed',
        'dotted',
        'double',
        'groove',
        'hidden',
        'inset',
        'none',
        'outset',
        'ridge',
        'solid'
      ],
      types: ['string', 'select', 'color', 'number']
    },
    {
      name: 'columns',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'flex',
      type: 'any',
      options: ['auto', 'available', 'content', 'fit-content', 'max-content', 'min-content', 'none'],
      types: ['select', 'number', 'string']
    },
    {
      name: 'flexFlow',
      type: 'any',
      options: ['column', 'column-reverse', 'nowrap', 'row', 'row-reverse', 'wrap', 'wrap-reverse'],
      types: ['select', 'string']
    },
    {
      name: 'font',
      type: 'any',
      options: ['caption', 'icon', 'menu', 'message-box', 'small-caption', 'status-bar'],
      types: ['select', 'string']
    },
    {
      name: 'gap',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'grid',
      type: 'string'
    },
    {
      name: 'gridArea',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'gridColumn',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'gridRow',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'gridTemplate',
      type: 'string'
    },
    {
      name: 'listStyle',
      type: 'any',
      options: ['inside', 'none', 'outside'],
      types: ['string', 'select']
    },
    {
      name: 'margin',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'mask',
      type: 'any',
      options: [
        'bottom',
        'center',
        'left',
        'right',
        'top',
        'no-repeat',
        'repeat',
        'repeat-x',
        'repeat-y',
        'round',
        'space',
        'border-box',
        'content-box',
        'padding-box',
        'fill-box',
        'margin-box',
        'stroke-box',
        'view-box',
        'add',
        'exclude',
        'intersect',
        'subtract',
        'alpha',
        'luminance',
        'match-source',
        'no-clip',
        'none'
      ],
      types: ['select', 'number', 'string']
    },
    {
      name: 'motion',
      type: 'any',
      options: [
        'bottom',
        'center',
        'left',
        'right',
        'top',
        'border-box',
        'content-box',
        'padding-box',
        'fill-box',
        'margin-box',
        'stroke-box',
        'view-box',
        'auto',
        'none'
      ],
      types: ['select', 'number', 'string']
    },
    {
      name: 'offset',
      type: 'any',
      options: [
        'bottom',
        'center',
        'left',
        'right',
        'top',
        'border-box',
        'content-box',
        'padding-box',
        'fill-box',
        'margin-box',
        'stroke-box',
        'view-box',
        'auto',
        'none'
      ],
      types: ['number', 'select', 'string']
    },
    {
      name: 'outline',
      type: 'any',
      options: [
        'dashed',
        'dotted',
        'double',
        'groove',
        'hidden',
        'inset',
        'none',
        'outset',
        'ridge',
        'solid',
        'medium',
        'thick',
        'thin',
        'auto',
        'invert'
      ],
      types: ['string', 'select', 'color', 'number']
    },
    {
      name: 'padding',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'placeItems',
      type: 'any',
      options: [
        'center',
        'end',
        'flex-end',
        'flex-start',
        'self-end',
        'self-start',
        'start',
        'baseline',
        'normal',
        'stretch'
      ],
      types: ['select', 'string']
    },
    {
      name: 'placeSelf',
      type: 'any',
      options: [
        'center',
        'end',
        'flex-end',
        'flex-start',
        'self-end',
        'self-start',
        'start',
        'auto',
        'baseline',
        'normal',
        'stretch'
      ],
      types: ['select', 'string']
    },
    {
      name: 'textDecoration',
      type: 'any',
      options: [
        'auto',
        'blink',
        'dashed',
        'dotted',
        'double',
        'from-font',
        'grammar-error',
        'line-through',
        'none',
        'overline',
        'solid',
        'spelling-error',
        'underline',
        'wavy'
      ],
      types: ['string', 'select', 'color', 'number']
    },
    {
      name: 'textEmphasis',
      type: 'any',
      options: ['circle', 'dot', 'double-circle', 'filled', 'none', 'open', 'sesame', 'triangle'],
      types: ['select', 'color', 'string']
    },
    {
      name: 'transition',
      type: 'any',
      options: ['ease', 'ease-in', 'ease-in-out', 'ease-out', 'step-end', 'step-start', 'linear', 'all', 'none'],
      types: ['select', 'string']
    },
    {
      name: 'alignmentBaseline',
      type: 'any',
      options: [
        'after-edge',
        'alphabetic',
        'auto',
        'baseline',
        'before-edge',
        'central',
        'hanging',
        'ideographic',
        'mathematical',
        'middle',
        'text-after-edge',
        'text-before-edge'
      ],
      types: ['select', 'string']
    },
    {
      name: 'baselineShift',
      type: 'any',
      options: ['baseline', 'sub', 'super'],
      types: ['string', 'number', 'select']
    },
    {
      name: 'clip',
      type: 'string'
    },
    {
      name: 'clipRule',
      type: 'any',
      options: ['evenodd', 'nonzero'],
      types: ['select', 'string']
    },
    {
      name: 'colorInterpolation',
      type: 'any',
      options: ['auto', 'linearRGB', 'sRGB'],
      types: ['select', 'string']
    },
    {
      name: 'colorRendering',
      type: 'any',
      options: ['auto', 'optimizeQuality', 'optimizeSpeed'],
      types: ['select', 'string']
    },
    {
      name: 'dominantBaseline',
      type: 'any',
      options: [
        'alphabetic',
        'auto',
        'central',
        'hanging',
        'ideographic',
        'mathematical',
        'middle',
        'no-change',
        'reset-size',
        'text-after-edge',
        'text-before-edge',
        'use-script'
      ],
      types: ['select', 'string']
    },
    {
      name: 'fill',
      type: 'any',
      options: ['child', 'context-fill', 'context-stroke', 'none'],
      types: ['string', 'select', 'color']
    },
    {
      name: 'fillOpacity',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'fillRule',
      type: 'any',
      options: ['evenodd', 'nonzero'],
      types: ['select', 'string']
    },
    {
      name: 'floodColor',
      type: 'any',
      types: ['color', 'string']
    },
    {
      name: 'floodOpacity',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'glyphOrientationVertical',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'lightingColor',
      type: 'any',
      types: ['color', 'string']
    },
    {
      name: 'marker',
      type: 'string'
    },
    {
      name: 'markerEnd',
      type: 'string'
    },
    {
      name: 'markerMid',
      type: 'string'
    },
    {
      name: 'markerStart',
      type: 'string'
    },
    {
      name: 'shapeRendering',
      type: 'any',
      options: ['auto', 'crispEdges', 'geometricPrecision', 'optimizeSpeed'],
      types: ['select', 'string']
    },
    {
      name: 'stopColor',
      type: 'any',
      types: ['color', 'string']
    },
    {
      name: 'stopOpacity',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'stroke',
      type: 'any',
      options: ['child', 'context-fill', 'context-stroke', 'none'],
      types: ['string', 'select', 'color']
    },
    {
      name: 'strokeDasharray',
      type: 'any',
      types: ['string', 'number']
    },
    {
      name: 'strokeDashoffset',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'strokeLinecap',
      type: 'any',
      options: ['butt', 'round', 'square'],
      types: ['select', 'string']
    },
    {
      name: 'strokeLinejoin',
      type: 'any',
      options: ['bevel', 'miter', 'round'],
      types: ['select', 'string']
    },
    {
      name: 'strokeMiterlimit',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'strokeOpacity',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'strokeWidth',
      type: 'any',
      types: ['number', 'string']
    },
    {
      name: 'textAnchor',
      type: 'any',
      options: ['end', 'middle', 'start'],
      types: ['select', 'string']
    },
    {
      name: 'vectorEffect',
      type: 'any',
      options: ['non-scaling-stroke', 'none'],
      types: ['select', 'string']
    }
  ]
};
Functions.add(null, desc, 'html');
